name: Pipeline

on:
  push:
  pull_request:
  schedule:
    - cron: '0 15 * * *'
  workflow_dispatch:

env:
  CI: true

jobs:


  doc:
    name: '📓 Docs'
    runs-on: ubuntu-latest
    steps:

    - name: '🧰 Checkout'
      uses: actions/checkout@v3

    - name: '📓 BuildTheDocs (BTD)'
      uses: buildthedocs/btd@v0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        skip-deploy: github.event_name == 'pull_request'

    - name: '📤 Upload artifact: HTML'
      uses: actions/upload-artifact@master
      with:
        name: doc
        path: doc/_build/html


  xyce-docker:
    name: '🛳️ ghdl/cosim:xyce'
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
    steps:

    - name: '🧰 Checkout'
      uses: actions/checkout@v3

    - name: '⚙️ Setup .github/bin'
      run: echo "$(pwd)/.github/bin" >> $GITHUB_PATH

    - name: '🚧 Run tests'
      run: |
        dockerRun ghdl/cosim:xyce \
          python3 -m pytest -v -s -ra \
          tests/test_vhpidirect_vffi.py::TestVFFI::test_xyce \
          --color=yes


  lin-docker:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        test:
        - vhpidirect_quickstart
        - vhpidirect_grt
        - vhpidirect_shared
        - vhpidirect_arrays
        - vhpidirect_vffi
        - vpi_quickstart
    name: '🛳️ ghdl/cosim:matplotlib · ${{ matrix.test }}'
    env:
      DOCKER_BUILDKIT: 1
    steps:

    - name: '🧰 Checkout'
      uses: actions/checkout@v3

    - name: '⚙️ Setup .github/bin'
      run: echo "$(pwd)/.github/bin" >> $GITHUB_PATH

    - name: '🚧 Run tests'
      run: |
        dockerRun ghdl/cosim:matplotlib \
          python3 -m pytest -v -s -ra \
          tests/test_${{ matrix.test }}.py \
          --color=yes


  lin-setup:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        test:
        - vhpidirect_quickstart
        - vhpidirect_grt
        - vhpidirect_shared
        - vhpidirect_arrays
        - vhpidirect_vffi
        - vpi_quickstart
    name: '🐧 Ubuntu LLVM · ${{ matrix.test }}'
    steps:

    - name: '🧰 Checkout'
      uses: actions/checkout@v3

    - name: '⚙️ Setup GHDL (LLVM)'
      uses: ghdl/setup-ghdl-ci@master
      with:
        backend: llvm

    - name: '🐍 Setup Python'
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: '⚙️ Install dependencies'
      run: |
        ghdl --version
        sudo apt update -qq
        sudo apt install -y imagemagick libssl-dev
        python -m pip install --progress-bar off pytest vunit_hdl matplotlib numpy

    - name: '🚧 Run tests'
      run: python -m pytest -v -s -ra tests/test_${{ matrix.test }}.py --color=yes


  win-setup:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        test:
        - vhpidirect_quickstart
        - vhpidirect_grt
        - vhpidirect_shared
        - vhpidirect_arrays
        - vhpidirect_vffi
        - vpi_quickstart
    name: '🟪 MSYS2 nightly · ${{ matrix.test }}'
    defaults:
      run:
        shell: msys2 {0}
    steps:

    - name: '🧰 Checkout'
      uses: actions/checkout@v3

    - name: '🟪 Setup MSYS2'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        pacboy: >
          python-pip:p
          python-numpy:p
          python-matplotlib:p
          openssl:p
          dlfcn:p

    - name: '⚙️ Setup GHDL (LLVM)'
      uses: ghdl/setup-ghdl-ci@master
      with:
        backend: llvm

    - name: '🐍 Install dependencies'
      run: python -m pip install --progress-bar off pytest vunit_hdl

    - name: '🚧 Run tests'
      run: python -m pytest -v -s -ra tests/test_${{ matrix.test }}.py --color=yes


  win-msys:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        test:
        - vhpidirect_quickstart
        - vhpidirect_grt
        - vhpidirect_shared
        - vhpidirect_arrays
        - vhpidirect_vffi
        - vpi_quickstart
    name: '🟪 MSYS2 pacman · ${{ matrix.test }}'
    defaults:
      run:
        shell: msys2 {0}
    steps:

    - name: '🧰 Checkout'
      uses: actions/checkout@v3

    - name: '🟪 Setup MSYS2'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        pacboy: >
          ghdl-llvm:p
          python-pip:p
          python-numpy:p
          python-matplotlib:p
          openssl:p
          dlfcn:p

    - name: '🐍 Install dependencies'
      run: python -m pip install --progress-bar off pytest vunit_hdl

    - name: '🚧 Run tests'
      run: python -m pytest -v -s -ra tests/test_${{ matrix.test }}.py --color=yes

#--

  lin-setup-vffi-demo:
    name: '🐧Ubuntu · nightly LLVM · VFFI'
    runs-on: ubuntu-latest
    steps:

    - name: '🧰 Checkout'
      uses: actions/checkout@v3

    - name: '⚙️ Setup GHDL (LLVM)'
      uses: ghdl/setup-ghdl-ci@master
      with:
        backend: llvm

    - name: '🚧 Run tests'
      run: ./vhpidirect/vffi_user/demo/run.sh


  win-setup-vffi-demo:
    name: '🟪 MSYS2 · nightly LLVM · VFFI'
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:

    - name: '🧰 Checkout'
      uses: actions/checkout@v3

    - name: '🟪 Setup MSYS2'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true

    - name: '⚙️ Setup GHDL (LLVM)'
      uses: ghdl/setup-ghdl-ci@master
      with:
        backend: llvm

    - name: '🚧 Run tests'
      run: ./vhpidirect/vffi_user/demo/run.sh
